{
  "version": 3,
  "sources": ["../../@egjs/list-differ/src/PolyMap.ts", "../../@egjs/list-differ/src/HashMap.ts", "../../@egjs/list-differ/src/consts.ts", "../../@egjs/list-differ/src/Link.ts", "../../@egjs/list-differ/src/Result.ts", "../../@egjs/list-differ/src/utils.ts", "../../@egjs/list-differ/src/ListDiffer.ts", "../../@egjs/list-differ/src/index.ts", "../../@egjs/react-flicking/src/react-flicking/consts.ts", "../../@egjs/react-flicking/src/react-flicking/ReactRenderer.ts", "../../@egjs/react-flicking/src/react-flicking/StrictPanel.tsx", "../../@egjs/react-flicking/src/react-flicking/NonStrictPanel.tsx", "../../@egjs/react-flicking/src/react-flicking/ViewportSlot.tsx", "../../@egjs/react-flicking/src/react-flicking/ReactElementProvider.ts", "../../@egjs/react-flicking/src/react-flicking/Flicking.tsx", "../../@egjs/react-flicking/src/react-flicking/index.ts", "dep:@egjs_react-flicking"],
  "sourcesContent": ["/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nexport default class PolyMap<T> {\n  private keys: T[] = [];\n  private values: number[] = [];\n  public get(key: T): number {\n    return this.values[this.keys.indexOf(key)];\n  }\n  public set(key: T, value: number) {\n    const keys = this.keys;\n    const values = this.values;\n    const prevIndex = keys.indexOf(key);\n    const index = prevIndex === -1 ? keys.length : prevIndex;\n\n    keys[index] = key;\n    values[index] = value;\n  }\n}\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nexport default class HashMap<T> {\n  private object = {};\n  public get(key: number | string): T {\n    return this.object[key];\n  }\n  public set(key: number | string, value: T) {\n    this.object[key] = value;\n  }\n};\n\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nexport const SUPPORT_MAP = typeof Map === \"function\";\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nexport default class Link {\n  prev?: Link;\n  next?: Link;\n\n  public connect(prevLink?: Link, nextLink?: Link) {\n    this.prev = prevLink;\n    this.next = nextLink;\n\n    prevLink && (prevLink.next = this);\n    nextLink && (nextLink.prev = this);\n  }\n  public disconnect() {\n    // In double linked list, diconnect the interconnected relationship.\n    const prevLink = this.prev;\n    const nextLink = this.next;\n    prevLink && (prevLink.next = nextLink);\n    nextLink && (nextLink.prev = prevLink);\n  }\n  public getIndex() {\n    let link: Link | undefined = this;\n    let index = -1;\n\n    while (link) {\n      link = link.prev;\n      ++index;\n    }\n    return index;\n  }\n}\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nimport Link from \"./Link\";\n\nfunction orderChanged(changed: number[][], fixed: boolean[]) {\n  // It is roughly in the order of these examples.\n  // 4, 6, 0, 2, 1, 3, 5, 7\n  const fromLinks: Link[] = [];\n  // 0, 1, 2, 3, 4, 5, 6, 7\n  const toLinks: Link[] = [];\n\n  changed.forEach(([from, to]) => {\n    const link = new Link();\n\n    fromLinks[from] = link;\n    toLinks[to] = link;\n  });\n  // `fromLinks` are connected to each other by double linked list.\n  fromLinks.forEach((link, i) => {\n    link.connect(fromLinks[i - 1]);\n  });\n\n  return changed.filter((_, i) => !fixed[i]).map(([from, to], i) => {\n    if (from === to) {\n      return [0, 0];\n    }\n    const fromLink = fromLinks[from];\n    const toLink = toLinks[to - 1];\n    const fromIndex = fromLink.getIndex();\n\n    // Disconnect the link connected to `fromLink`.\n    fromLink.disconnect();\n\n    // Connect `fromLink` to the right of `toLink`.\n    if (!toLink) {\n      fromLink.connect(undefined, fromLinks[0]);\n    } else {\n      fromLink.connect(toLink, toLink.next);\n    }\n    const toIndex = fromLink.getIndex();\n    return [fromIndex, toIndex];\n  });\n}\n\nexport default class Result<T = any> {\n  public prevList: T[];\n  public list: T[];\n  public added: number[];\n  public removed: number[];\n  public changed: number[][];\n  public maintained: number[][];\n  private changedBeforeAdded: number[][];\n  private fixed: boolean[];\n\n  private cacheOrdered: number[][];\n  private cachePureChanged: number[][];\n  constructor(\n    prevList: T[],\n    list: T[],\n    added: number[],\n    removed: number[],\n    changed: number[][],\n    maintained: number[][],\n    changedBeforeAdded: number[][],\n    fixed: boolean[],\n  ) {\n    this.prevList = prevList;\n    this.list = list;\n    this.added = added;\n    this.removed = removed;\n    this.changed = changed;\n    this.maintained = maintained;\n    this.changedBeforeAdded = changedBeforeAdded;\n    this.fixed = fixed;\n  }\n  get ordered(): number[][] {\n    if (!this.cacheOrdered) {\n      this.caculateOrdered();\n    }\n    return this.cacheOrdered;\n  }\n  get pureChanged(): number[][] {\n    if (!this.cachePureChanged) {\n      this.caculateOrdered();\n    }\n    return this.cachePureChanged;\n  }\n  private caculateOrdered() {\n    const ordered = orderChanged(this.changedBeforeAdded, this.fixed);\n    const changed: number[][] = this.changed;\n    const pureChanged: number[][] = [];\n\n    this.cacheOrdered = ordered.filter(([from, to], i) => {\n      const [fromBefore, toBefore] = changed[i];\n\n      if (from !== to) {\n        pureChanged.push([fromBefore, toBefore]);\n        return true;\n      }\n    });\n    this.cachePureChanged = pureChanged;\n  }\n}\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nimport { MapInteface, DiffResult } from \"./types\";\nimport PolyMap from \"./PolyMap\";\nimport HashMap from \"./HashMap\";\nimport { SUPPORT_MAP } from \"./consts\";\nimport Result from \"./Result\";\n\n/**\n *\n * @memberof eg.ListDiffer\n * @static\n * @function\n * @param - Previous List <ko> \uC774\uC804 \uBAA9\uB85D </ko>\n * @param - List to Update <ko> \uC5C5\uB370\uC774\uD2B8 \uD560 \uBAA9\uB85D </ko>\n * @param - This callback function returns the key of the item. <ko> \uC544\uC774\uD15C\uC758 \uD0A4\uB97C \uBC18\uD658\uD558\uB294 \uCF5C\uBC31 \uD568\uC218\uC785\uB2C8\uB2E4.</ko>\n * @return - Returns the diff between `prevList` and `list` <ko> `prevList`\uC640 `list`\uC758 \uB2E4\uB978 \uC810\uC744 \uBC18\uD658\uD55C\uB2E4.</ko>\n * @example\n * import { diff } from \"@egjs/list-differ\";\n * // script => eg.ListDiffer.diff\n * const result = diff([0, 1, 2, 3, 4, 5], [7, 8, 0, 4, 3, 6, 2, 1], e => e);\n * // List before update\n * // [1, 2, 3, 4, 5]\n * console.log(result.prevList);\n * // Updated list\n * // [4, 3, 6, 2, 1]\n * console.log(result.list);\n * // Index array of values added to `list`\n * // [0, 1, 5]\n * console.log(result.added);\n * // Index array of values removed in `prevList`\n * // [5]\n * console.log(result.removed);\n * // An array of index pairs of `prevList` and `list` with different indexes from `prevList` and `list`\n * // [[0, 2], [4, 3], [3, 4], [2, 6], [1, 7]]\n * console.log(result.changed);\n * // The subset of `changed` and an array of index pairs that moved data directly. Indicate an array of absolute index pairs of `ordered`.(Formatted by: Array<[index of prevList, index of list]>)\n * // [[4, 3], [3, 4], [2, 6]]\n * console.log(result.pureChanged);\n * // An array of index pairs to be `ordered` that can synchronize `list` before adding data. (Formatted by: Array<[prevIndex, nextIndex]>)\n * // [[4, 1], [4, 2], [4, 3]]\n * console.log(result.ordered);\n * // An array of index pairs of `prevList` and `list` that have not been added/removed so data is preserved\n * // [[0, 2], [4, 3], [3, 4], [2, 6], [1, 7]]\n * console.log(result.maintained);\n */\nexport function diff<T>(\n  prevList: T[],\n  list: T[],\n  findKeyCallback?: (e: T, i: number, arr: T[]) => any\n): DiffResult<T> {\n  const mapClass: new () => MapInteface<any, number> = SUPPORT_MAP ? Map : (findKeyCallback ? HashMap : PolyMap);\n  const callback = findKeyCallback || ((e: T) => e);\n  const added: number[] = [];\n  const removed: number[] = [];\n  const maintained: number[][] = [];\n  const prevKeys = prevList.map(callback);\n  const keys = list.map(callback);\n  const prevKeyMap: MapInteface<any, number> = new mapClass();\n  const keyMap: MapInteface<any, number> = new mapClass();\n  const changedBeforeAdded: number[][] = [];\n  const fixed: boolean[] = [];\n  const removedMap: object = {};\n  let changed: number[][] = [];\n  let addedCount = 0;\n  let removedCount = 0;\n\n  // Add prevKeys and keys to the hashmap.\n  prevKeys.forEach((key, prevListIndex) => {\n    prevKeyMap.set(key, prevListIndex);\n  });\n  keys.forEach((key, listIndex) => {\n    keyMap.set(key, listIndex);\n  });\n\n  // Compare `prevKeys` and `keys` and add them to `removed` if they are not in `keys`.\n  prevKeys.forEach((key, prevListIndex) => {\n    const listIndex = keyMap.get(key);\n\n    // In prevList, but not in list, it is removed.\n    if (typeof listIndex === \"undefined\") {\n      ++removedCount;\n      removed.push(prevListIndex);\n    } else {\n      removedMap[listIndex] = removedCount;\n    }\n  });\n\n  // Compare `prevKeys` and `keys` and add them to `added` if they are not in `prevKeys`.\n  keys.forEach((key, listIndex) => {\n    const prevListIndex = prevKeyMap.get(key);\n\n    // In list, but not in prevList, it is added.\n    if (typeof prevListIndex === \"undefined\") {\n      added.push(listIndex);\n      ++addedCount;\n    } else {\n      maintained.push([prevListIndex, listIndex]);\n      removedCount = removedMap[listIndex] || 0;\n\n      changedBeforeAdded.push([\n        prevListIndex - removedCount,\n        listIndex - addedCount,\n      ]);\n      fixed.push(listIndex === prevListIndex);\n      if (prevListIndex !== listIndex) {\n        changed.push([prevListIndex, listIndex]);\n      }\n    }\n  });\n  // Sort by ascending order of 'to(list's index).\n  removed.reverse();\n\n  return new Result(\n    prevList,\n    list,\n    added,\n    removed,\n    changed,\n    maintained,\n    changedBeforeAdded,\n    fixed,\n  );\n}\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nimport { DiffResult, ListFormat } from \"./types\";\nimport { diff } from \"./utils\";\n\n/**\n * A module that checks diff when values are added, removed, or changed in an array.\n * @ko \uBC30\uC5F4 \uB610\uB294 \uC624\uBE0C\uC81D\uD2B8\uC5D0\uC11C \uAC12\uC774 \uCD94\uAC00\uB418\uAC70\uB098 \uC0AD\uC81C\uB418\uAC70\uB098 \uC21C\uC11C\uAC00 \uBCC0\uACBD\uC0AC\uD56D\uC744 \uCCB4\uD06C\uD558\uB294 \uBAA8\uB4C8\uC785\uB2C8\uB2E4.\n * @memberof eg\n */\nclass ListDiffer<T> {\n  private list: T[];\n  /**\n   * @param - Initializing Data Array. <ko> \uCD08\uAE30 \uC124\uC815\uD560 \uB370\uC774\uD130 \uBC30\uC5F4.</ko>\n   * @param - This callback function returns the key of the item. <ko> \uC544\uC774\uD15C\uC758 \uD0A4\uB97C \uBC18\uD658\uD558\uB294 \uCF5C\uBC31 \uD568\uC218\uC785\uB2C8\uB2E4.</ko>\n   * @example\n   * import ListDiffer from \"@egjs/list-differ\";\n   * // script => eg.ListDiffer\n   * const differ = new ListDiffer([0, 1, 2, 3, 4, 5], e => e);\n   * const result = differ.update([7, 8, 0, 4, 3, 6, 2, 1]);\n   * // List before update\n   * // [1, 2, 3, 4, 5]\n   * console.log(result.prevList);\n   * // Updated list\n   * // [4, 3, 6, 2, 1]\n   * console.log(result.list);\n   * // Index array of values added to `list`.\n   * // [0, 1, 5]\n   * console.log(result.added);\n   * // Index array of values removed in `prevList`.\n   * // [5]\n   * console.log(result.removed);\n   * // An array of index pairs of `prevList` and `list` with different indexes from `prevList` and `list`.\n   * // [[0, 2], [4, 3], [3, 4], [2, 6], [1, 7]]\n   * console.log(result.changed);\n   * // The subset of `changed` and an array of index pairs that moved data directly. Indicate an array of absolute index pairs of `ordered`.(Formatted by: Array<[index of prevList, index of list]>)\n   * // [[4, 3], [3, 4], [2, 6]]\n   * console.log(result.pureChanged);\n   * // An array of index pairs to be `ordered` that can synchronize `list` before adding data. (Formatted by: Array<[prevIndex, nextIndex]>)\n   * // [[4, 1], [4, 2], [4, 3]]\n   * console.log(result.ordered);\n   * // An array of index pairs of `prevList` and `list` that have not been added/removed so data is preserved.\n   * // [[0, 2], [4, 3], [3, 4], [2, 6], [1, 7]]\n   * console.log(result.maintained);\n   */\n  constructor(\n    list: ListFormat<T> = [],\n    private findKeyCallback?: (e: T, i: number, arr: T[]) => number | string,\n  ) {\n    this.list = [].slice.call(list);\n  }\n  /**\n   * Update list.\n   * @ko \uB9AC\uC2A4\uD2B8\uB97C \uC5C5\uB370\uC774\uD2B8\uB97C \uD569\uB2C8\uB2E4.\n   * @param - List to update <ko> \uC5C5\uB370\uC774\uD2B8\uD560 \uB9AC\uC2A4\uD2B8 </ko>\n   * @return - Returns the results of an update from `prevList` to `list`.<ko> `prevList`\uC5D0\uC11C `list`\uB85C \uC5C5\uB370\uC774\uD2B8\uD55C \uACB0\uACFC\uB97C \uBC18\uD658\uD55C\uB2E4. </ko>\n   */\n  public update(list: ListFormat<T>): DiffResult<T> {\n    const newData: T[] = [].slice.call(list);\n    const result = diff<T>(this.list, newData, this.findKeyCallback);\n\n    this.list = newData;\n    return result;\n  }\n}\n\nexport default ListDiffer;\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nimport ListDiffer from \"./ListDiffer\";\nexport default ListDiffer;\nexport { diff } from \"./utils\";\nexport * from \"./types\";\n", "/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport {\n  SelectEvent,\n  NeedPanelEvent,\n  VisibleChangeEvent,\n  HoldStartEvent,\n  HoldEndEvent,\n  MoveStartEvent,\n  MoveEvent,\n  MoveEndEvent,\n  WillChangeEvent,\n  ChangedEvent,\n  WillRestoreEvent,\n  RestoredEvent,\n  ReadyEvent,\n  BeforeResizeEvent,\n  AfterResizeEvent,\n  ReachEdgeEvent,\n  PanelChangeEvent\n} from \"@egjs/flicking\";\n\nimport { FlickingProps } from \"./types\";\n\nexport const DEFAULT_PROPS: FlickingProps = {\n  viewportTag: \"div\",\n  cameraTag: \"div\",\n  cameraClass: \"\",\n  renderOnSameKey: false,\n  plugins: [],\n  useFindDOMNode: false,\n  hideBeforeInit: false,\n  onReady: (e: ReadyEvent) => {},\n  onBeforeResize: (e: BeforeResizeEvent) => {},\n  onAfterResize: (e: AfterResizeEvent) => {},\n  onHoldStart: (e: HoldStartEvent) => {},\n  onHoldEnd: (e: HoldEndEvent) => {},\n  onMoveStart: (e: MoveStartEvent) => {},\n  onMove: (e: MoveEvent) => {},\n  onMoveEnd: (e: MoveEndEvent) => {},\n  onWillChange: (e: WillChangeEvent) => {},\n  onChanged: (e: ChangedEvent) => {},\n  onWillRestore: (e: WillRestoreEvent) => {},\n  onRestored: (e: RestoredEvent) => {},\n  onSelect: (e: SelectEvent) => {},\n  onNeedPanel: (e: NeedPanelEvent) => {},\n  onVisibleChange: (e: VisibleChangeEvent) => {},\n  onReachEdge: (e: ReachEdgeEvent) => {},\n  onPanelChange: (e: PanelChangeEvent) => {}\n};\n", "/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { ExternalRenderer, PanelOptions, RendererOptions, getFlickingAttached } from \"@egjs/flicking\";\n\nimport ReactFlicking from \"./Flicking\";\nimport StrictPanel from \"./StrictPanel\";\nimport NonStrictPanel from \"./NonStrictPanel\";\n\nexport interface ReactRendererOptions extends RendererOptions {\n  reactFlicking: ReactFlicking;\n}\n\nclass ReactRenderer extends ExternalRenderer {\n  // Internal States\n  protected _reactFlicking: ReactFlicking;\n\n  public constructor(options: ReactRendererOptions) {\n    super(options);\n\n    this._reactFlicking = options.reactFlicking;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/require-await\n  public async render() {\n    const flicking = getFlickingAttached(this._flicking);\n    const reactFlicking = this._reactFlicking;\n    const strategy = this._strategy;\n\n    this._rendering = true;\n\n    strategy.updateRenderingPanels(flicking);\n    strategy.renderPanels(flicking);\n\n    return new Promise<void>(resolve => {\n      reactFlicking.renderEmitter.once(\"render\", () => {\n        this._rendering = false;\n        resolve()\n      });\n      reactFlicking.forceUpdate();\n    });\n  }\n\n  public async forceRenderAllPanels() {\n    const reactFlicking = this._reactFlicking;\n\n    this._rendering = true;\n    await super.forceRenderAllPanels();\n\n    return new Promise<void>(resolve => {\n      reactFlicking.renderEmitter.once(\"render\", () => {\n        this._rendering = false;\n        resolve();\n      });\n      reactFlicking.forceUpdate();\n    });\n  }\n\n  protected _collectPanels() {\n    const flicking = getFlickingAttached(this._flicking);\n    const reactFlicking = this._reactFlicking;\n    const reactPanels = reactFlicking.reactPanels;\n\n    this._panels = this._strategy.collectPanels(flicking, reactPanels);\n  }\n\n  protected _createPanel(externalComponent: StrictPanel | NonStrictPanel | HTMLDivElement, options: PanelOptions) {\n    return this._strategy.createPanel(externalComponent, options);\n  }\n}\n\nexport default ReactRenderer;\n", "/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport * as React from \"react\";\n\nclass StrictPanel extends React.Component<{ children?: React.ReactElement }> {\n  private _hide: boolean = false;\n\n  private _elRef: React.RefObject<HTMLElement> = React.createRef();\n\n  public get nativeElement() { return this._elRef.current!; }\n  public get rendered() { return !this._hide; }\n\n  public render() {\n    return this._hide\n      ? <></>\n      : this._getElement();\n  }\n\n  public show() {\n    this._hide = false;\n  }\n\n  public hide() {\n    this._hide = true;\n  }\n\n  private _getElement() {\n    return React.cloneElement(React.Children.only(this.props.children) as React.ReactElement, {\n      ref: this._elRef\n    });\n  }\n}\n\nexport default StrictPanel;\n", "/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport * as React from \"react\";\nimport { findDOMNode } from \"react-dom\";\n\nclass NonStrictPanel extends React.Component<{ children?: React.ReactElement }> {\n  private _hide: boolean = false;\n\n  public get nativeElement() { return findDOMNode(this) as HTMLElement; }\n  public get rendered() { return !this._hide; }\n\n  public render() {\n    return this._hide\n      ? <></>\n      : this.props.children;\n  }\n\n  public show() {\n    this._hide = false;\n  }\n\n  public hide() {\n    this._hide = true;\n  }\n}\n\nexport default NonStrictPanel;\n", "/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport React, { ReactNode } from \"react\";\n\nconst ViewportSlot = React.memo((props: { children?: ReactNode }) => <>{props.children}</>);\n\nexport default ViewportSlot;\n", "/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { ElementProvider } from \"@egjs/flicking\";\nimport StrictPanel from \"./StrictPanel\";\nimport NonStrictPanel from \"./NonStrictPanel\";\n\nclass ReactElementProvider implements ElementProvider {\n  private _el: StrictPanel | NonStrictPanel;\n\n  public get element() { return this._el.nativeElement; }\n  public get rendered() { return this._el.rendered; }\n\n  public constructor(el: StrictPanel | NonStrictPanel) {\n    this._el = el;\n  }\n\n  public show() {\n    this._el.show();\n  }\n\n  public hide() {\n    this._el.hide();\n  }\n}\n\nexport default ReactElementProvider;\n", "/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport * as React from \"react\";\nimport Component from \"@egjs/component\";\nimport ListDiffer, { diff, DiffResult } from \"@egjs/list-differ\";\nimport VanillaFlicking, {\n  FlickingOptions,\n  VirtualRenderingStrategy,\n  EVENTS,\n  withFlickingMethods,\n  sync,\n  getRenderingPanels,\n  getDefaultCameraTransform,\n  Plugin,\n  range,\n  NormalRenderingStrategy\n} from \"@egjs/flicking\";\n\nimport { DEFAULT_PROPS } from \"./consts\";\nimport { FlickingProps } from \"./types\";\nimport ReactRenderer, { ReactRendererOptions } from \"./ReactRenderer\";\nimport StrictPanel from \"./StrictPanel\";\nimport NonStrictPanel from \"./NonStrictPanel\";\nimport ViewportSlot from \"./ViewportSlot\";\nimport ReactElementProvider from \"./ReactElementProvider\";\n\nclass Flicking extends React.Component<Partial<FlickingProps & FlickingOptions>> {\n  public static defaultProps: FlickingProps = DEFAULT_PROPS;\n\n  @withFlickingMethods private _vanillaFlicking: VanillaFlicking;\n  private _panels: React.RefObject<StrictPanel | NonStrictPanel | HTMLDivElement>[] = [];\n  private _pluginsDiffer: ListDiffer<any>;\n  private _jsxDiffer: ListDiffer<React.ReactElement>;\n  private _viewportElement: HTMLElement;\n  private _diffResult: DiffResult<React.ReactElement> | null;\n  private _renderEmitter = new Component<{ render: void }>();\n  private _prevChildren: React.ReactElement[];\n\n  public get reactPanels() { return this._panels.map(panel => panel.current!); }\n  public get renderEmitter() { return this._renderEmitter; }\n\n  public constructor(props: Partial<FlickingProps & FlickingOptions>) {\n    super(props);\n\n    const children = this._getChildren();\n    this._panels = this._createPanelRefs(props, children);\n    this._prevChildren = children;\n  }\n\n  public componentDidMount() {\n    const props = this.props as Required<FlickingProps & FlickingOptions>;\n    const rendererOptions: ReactRendererOptions = {\n      reactFlicking: this,\n      align: props.align,\n      strategy: props.virtual && props.panelsPerView > 0\n        ? new VirtualRenderingStrategy()\n        : new NormalRenderingStrategy({\n          providerCtor: ReactElementProvider\n        })\n    };\n\n    const flicking = new VanillaFlicking(\n      this._viewportElement,\n      {\n        ...props,\n        externalRenderer: new ReactRenderer(rendererOptions)\n      },\n    );\n\n    this._vanillaFlicking = flicking;\n\n    const children = this._getChildren();\n    this._jsxDiffer = new ListDiffer(children, panel => panel.key!);\n    this._pluginsDiffer = new ListDiffer<any>();\n    this._prevChildren = children;\n\n    this._bindEvents();\n    this._checkPlugins();\n\n    if (props.status) {\n      flicking.setStatus(props.status);\n    }\n  }\n\n  public componentWillUnmount() {\n    this._vanillaFlicking?.destroy();\n  }\n\n  public shouldComponentUpdate(nextProps: Readonly<Partial<FlickingProps & FlickingOptions>>): boolean {\n    const vanillaFlicking = this._vanillaFlicking;\n    const prevProps = this.props;\n\n    if (!vanillaFlicking || !vanillaFlicking.initialized) return false;\n\n    const { children, ...restProps } = nextProps;\n\n    for (const key in restProps) {\n      if (prevProps[key] !== nextProps[key]) {\n        return true;\n      }\n    }\n\n    const prevChildren = this._prevChildren;\n    const nextChildren = this._getChildren(children);\n    if (nextProps.renderOnSameKey || !this._hasSameChildren(prevChildren, nextChildren)) return true;\n\n    return false;\n  }\n\n  public beforeRender() {\n    const vanillaFlicking = this._vanillaFlicking;\n    const props = this.props;\n    const prevChildren = this._prevChildren;\n\n    // Ignore updates before init, they will be updated after \"ready\" event's force update\n    // Also, prevent updates when another update is already queued.\n    // This usually happens when render() called twice without calling componentDidMount, like in the case of React.StrictMode.\n    if (!vanillaFlicking || !vanillaFlicking.initialized || this._diffResult) return;\n\n    const nextChildren = this._getChildren(props.children);\n    if (props.renderOnSameKey || !this._hasSameChildren(prevChildren, nextChildren)) {\n      this._panels = this._createPanelRefs(props, nextChildren);\n      this._diffResult = this._jsxDiffer.update(nextChildren);\n      this._prevChildren = nextChildren;\n    }\n  }\n\n  public componentDidUpdate() {\n    const flicking = this._vanillaFlicking;\n    const renderEmitter = this._renderEmitter;\n    const diffResult = this._diffResult;\n\n    this._checkPlugins();\n    renderEmitter.trigger(\"render\");\n    flicking.camera.updateOffset();\n\n    // Omit 'virtual', as it can't have any setter\n    const { virtual, ...props } = this.props;\n    for (const key in props) {\n      if (key in flicking && flicking[key] !== props[key]) {\n        flicking[key] = props[key];\n      }\n    }\n\n    if (!diffResult || !flicking.initialized) return;\n\n    sync(flicking, diffResult, this.reactPanels);\n\n    this._diffResult = null;\n  }\n\n  public render() {\n    const props = this.props;\n    const Viewport = props.viewportTag as any;\n    const Camera = props.cameraTag as any;\n    const attributes: { [key: string]: any } = {};\n    const flicking = this._vanillaFlicking;\n\n    this.beforeRender();\n\n    for (const name in props) {\n      if (!(name in DEFAULT_PROPS) && !(name in VanillaFlicking.prototype)) {\n        attributes[name] = props[name];\n      }\n    }\n\n    const initialized = flicking && flicking.initialized;\n    const viewportClasses: string[] = [\"flicking-viewport\"];\n    const cameraClasses: string[] = [\"flicking-camera\"];\n    const isHorizontal = flicking\n      ? flicking.horizontal\n      : props.horizontal ?? true;\n\n    if (!isHorizontal) {\n      viewportClasses.push(\"vertical\");\n    }\n    if (props.hideBeforeInit && !initialized) {\n      viewportClasses.push(\"flicking-hidden\");\n    }\n    if (attributes.className) {\n      viewportClasses.push(attributes.className);\n    }\n    if (props.cameraClass) {\n      cameraClasses.push(props.cameraClass);\n    }\n\n    const cameraProps = !initialized && props.firstPanelSize\n      ? { style: {\n        transform: getDefaultCameraTransform(this.props.align, this.props.horizontal, this.props.firstPanelSize)\n      }}\n      : {};\n\n    const panels = !!props.virtual && (props.panelsPerView ?? -1) > 0\n      ? this._getVirtualPanels()\n      : this._getPanels();\n\n    return (\n      <Viewport {...attributes} className={viewportClasses.join(\" \")} ref={(e?: HTMLElement) => {\n        e && (this._viewportElement = e);\n      }}>\n        <Camera className={cameraClasses.join(\" \")} {...cameraProps}>\n          { panels }\n        </Camera>\n        { this._getViewportSlot() }\n      </Viewport>\n    );\n  }\n\n  private _createPanelRefs(props: this[\"props\"], children: Array<React.ReactElement<any>>): React.RefObject<StrictPanel | NonStrictPanel | HTMLDivElement>[] {\n    const panelsPerView = props.panelsPerView ?? -1;\n\n    return panelsPerView > 0 && !!props.virtual\n      ? range(panelsPerView + 1).map(() => React.createRef())\n      : children.map(() => React.createRef());\n  }\n\n  private _bindEvents() {\n    const flicking = this._vanillaFlicking!;\n\n    Object.keys(EVENTS).forEach((eventKey: keyof typeof EVENTS) => {\n      const eventName = EVENTS[eventKey];\n      const propName = `on${eventName.charAt(0).toUpperCase() + eventName.slice(1)}`;\n\n      flicking.on(eventName, e => {\n        e.currentTarget = this;\n\n        const evtHandler = this.props[propName];\n        evtHandler(e);\n      });\n    });\n\n    flicking.once(EVENTS.READY, () => {\n      this.forceUpdate();\n    });\n  }\n\n  private _checkPlugins() {\n    const flicking = this._vanillaFlicking;\n    const { list, added, removed, prevList } = this._pluginsDiffer.update(this.props.plugins!) as DiffResult<Plugin>;\n\n    flicking.addPlugins(...added.map(index => list[index]));\n    flicking.removePlugins(...removed.map(index => prevList[index]));\n  }\n\n  private _hasSameChildren(prevChildren: React.ReactElement[], nextChildren: React.ReactElement[]) {\n    if (prevChildren.length !== nextChildren.length || prevChildren.length === 0) return false;\n\n    const same = prevChildren.every((child, idx) => {\n      const nextChild = nextChildren[idx];\n\n      if (child.key && nextChild.key) {\n        return child.key === nextChild.key;\n      } else {\n        return child === nextChild;\n      }\n    });\n\n    return same;\n  }\n\n  private _getChildren(children: React.ReactNode = this.props.children) {\n    return (React.Children.toArray(children) as Array<React.ReactElement<any>>)\n      .filter(child => child.type !== ViewportSlot)\n      .reduce((all, child) => {\n        return [...all, ...this._unpackFragment(child)];\n      }, []) as Array<React.ReactElement<any>>;\n  }\n\n  private _getViewportSlot() {\n    return (React.Children.toArray(this.props.children) as Array<React.ReactElement<any>>)\n      .filter(child => child.type === ViewportSlot);\n  }\n\n  private _unpackFragment(child: React.ReactElement) {\n    return this._isFragment(child)\n      ? React.Children.toArray(child.props.children)\n        .reduce((allChilds: React.ReactElement[], fragChild: React.ReactElement) => [...allChilds, ...this._unpackFragment(fragChild)], [] as React.ReactElement[])\n      : [child];\n  }\n\n  private _getVirtualPanels() {\n    const {\n      panelClass = \"flicking-panel\"\n    } = this.props.virtual!;\n    const panelsPerView = this.props.panelsPerView!;\n    const flicking = this._vanillaFlicking;\n    const initialized = flicking && flicking.initialized;\n\n    const renderingIndexes = initialized\n      ? flicking.renderer.strategy.getRenderingIndexesByOrder(flicking)\n      : range(panelsPerView + 1);\n\n    const firstPanel = flicking && flicking.panels[0];\n    const size = firstPanel\n      ? flicking.horizontal\n        ? { width: firstPanel.size }\n        : { height: firstPanel.size }\n      : {};\n\n    return renderingIndexes.map(idx => {\n      return <div\n        key={idx}\n        data-element-index={idx}\n        ref={this._panels[idx] as React.RefObject<HTMLDivElement>}\n        className={panelClass}\n        style={size} />\n    });\n  }\n\n  private _getPanels() {\n    const origChildren = this._getChildren();\n    const vanillaFlicking = this._vanillaFlicking;\n    const diffResult = this._diffResult;\n\n    const children: React.ReactElement[] = vanillaFlicking && vanillaFlicking.initialized\n      ? diffResult\n        ? getRenderingPanels(vanillaFlicking, diffResult)\n        : getRenderingPanels(vanillaFlicking, diff(origChildren, origChildren))\n      : origChildren;\n\n    return this.props.useFindDOMNode\n      ? children.map((child, idx) => <NonStrictPanel key={child.key!} ref={this._panels[idx] as any}>{child}</NonStrictPanel>)\n      : children.map((child, idx) => <StrictPanel key={child.key!} ref={this._panels[idx] as any}>{child}</StrictPanel>)\n  }\n\n  private _isFragment(child: React.ReactElement) {\n    if (child.type) {\n      return child.type === React.Fragment;\n    }\n\n    return (child as any) === React.Fragment;\n  }\n}\n\ninterface Flicking extends React.Component<Partial<FlickingProps & FlickingOptions>>, VanillaFlicking { }\nexport default Flicking;\n", "/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Flicking from \"./Flicking\";\nimport ViewportSlot from \"./ViewportSlot\";\n\nexport * from \"@egjs/flicking\";\nexport * from \"./types\";\n\nexport {\n  ViewportSlot\n}\nexport default Flicking;\n", "import d from \"./node_modules/@egjs/react-flicking/dist/flicking.esm.js\";export default d;\nexport * from \"./node_modules/@egjs/react-flicking/dist/flicking.esm.js\""],
  "mappings": "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",
  "names": ["key", "values", "keys", "indexOf", "value", "prevIndex", "index", "length", "object", "SUPPORT_MAP", "Map", "prevLink", "nextLink", "prev", "next", "link", "orderChanged", "changed", "fixed", "fromLinks", "toLinks", "forEach", "_a", "from", "to", "Link", "i", "connect", "filter", "_", "map", "fromLink", "toLink", "fromIndex", "getIndex", "disconnect", "undefined", "toIndex", "prevList", "list", "added", "removed", "maintained", "changedBeforeAdded", "Object", "cacheOrdered", "caculateOrdered", "cachePureChanged", "ordered", "pureChanged", "_b", "fromBefore", "toBefore", "push", "diff", "findKeyCallback", "mapClass", "HashMap", "PolyMap", "callback", "e", "prevKeys", "prevKeyMap", "keyMap", "removedMap", "addedCount", "removedCount", "prevListIndex", "set", "listIndex", "get", "reverse", "Result", "slice", "call", "newData", "result", "DEFAULT_PROPS", "viewportTag", "cameraTag", "cameraClass", "renderOnSameKey", "plugins", "useFindDOMNode", "hideBeforeInit", "onReady", "e", "onBeforeResize", "onAfterResize", "onHoldStart", "onHoldEnd", "onMoveStart", "onMove", "onMoveEnd", "onWillChange", "onChanged", "onWillRestore", "onRestored", "onSelect", "onNeedPanel", "onVisibleChange", "onReachEdge", "onPanelChange", "__extends", "ReactRenderer", "options", "_super", "_this", "_reactFlicking", "reactFlicking", "flicking", "getFlickingAttached", "_flicking", "strategy", "_strategy", "_rendering", "updateRenderingPanels", "renderPanels", "Promise", "resolve", "renderEmitter", "once", "forceUpdate", "forceRenderAllPanels", "_a", "reactPanels", "_panels", "collectPanels", "externalComponent", "createPanel", "ExternalRenderer", "StrictPanel", "createRef", "Object", "_elRef", "current", "_hide", "React", "_getElement", "cloneElement", "Children", "only", "props", "children", "ref", "Component", "NonStrictPanel", "findDOMNode", "ViewportSlot", "memo", "React__default", "ReactElementProvider", "el", "_el", "nativeElement", "rendered", "show", "hide", "Flicking", "_getChildren", "_createPanelRefs", "_prevChildren", "map", "panel", "_renderEmitter", "rendererOptions", "align", "virtual", "panelsPerView", "VirtualRenderingStrategy", "NormalRenderingStrategy", "providerCtor", "VanillaFlicking", "_viewportElement", "externalRenderer", "_vanillaFlicking", "_jsxDiffer", "ListDiffer", "key", "_pluginsDiffer", "_bindEvents", "_checkPlugins", "status", "setStatus", "destroy", "nextProps", "vanillaFlicking", "prevProps", "initialized", "restProps", "prevChildren", "nextChildren", "_hasSameChildren", "_diffResult", "update", "diffResult", "trigger", "camera", "updateOffset", "sync", "Viewport", "Camera", "attributes", "beforeRender", "name", "prototype", "viewportClasses", "cameraClasses", "isHorizontal", "horizontal", "push", "className", "cameraProps", "firstPanelSize", "style", "transform", "getDefaultCameraTransform", "panels", "_getVirtualPanels", "_getPanels", "join", "_getViewportSlot", "range", "keys", "EVENTS", "forEach", "eventKey", "eventName", "propName", "charAt", "toUpperCase", "slice", "on", "currentTarget", "evtHandler", "READY", "list", "added", "removed", "prevList", "addPlugins", "index", "removePlugins", "length", "same", "every", "child", "idx", "nextChild", "toArray", "filter", "type", "reduce", "all", "_unpackFragment", "_isFragment", "allChilds", "fragChild", "panelClass", "renderingIndexes", "renderer", "getRenderingIndexesByOrder", "firstPanel", "size", "width", "height", "origChildren", "getRenderingPanels", "diff", "Fragment", "__decorate", "withFlickingMethods", "Flicking"]
}
